{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AddedVesting",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "ReleasedVesting",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BSC_USD_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "BUSD_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PAUSER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ROX_TOKEN",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "TUSD_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "fromToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "fromAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "toAddress",
						"type": "address"
					}
				],
				"name": "buyROX",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getRoleMember",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleMemberCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reclaimEther",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "reclaimToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "releaseVesting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalVestedAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "vestedAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"getRoleMember(bytes32,uint256)": {
					"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
				},
				"getRoleMemberCount(bytes32)": {
					"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/RoxPresale.sol": "RoxPresale"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/AccessControl.sol": {
			"keccak256": "0xf1b6cb52a7e1c9ced4538f2508c401e36e5013228fe7a385747f475c9454269e",
			"license": "MIT",
			"urls": [
				"bzz-raw://89c5d38eb45fff205c1f077911e96405b4adaca9430d72f37ac194711e6e1f45",
				"dweb:/ipfs/QmcsR7AfHtFw7pmL2QjvkJxFs8EduDvtDs4QVdSBTrvWH5"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/AccessControlEnumerable.sol": {
			"keccak256": "0x07e4a117415e80d4b9510499e553cbaf522a7ce73519379fffe053adc93173ac",
			"license": "MIT",
			"urls": [
				"bzz-raw://818a5af5883024643b0fe9a644f1c8b06a503768dbbfed83632070d57e42f7ea",
				"dweb:/ipfs/QmaoDJEgvERo3BRbRVkTvWjuHBc16utLV9xjviDJ66DsoC"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/Address.sol": {
			"keccak256": "0x4d31a0f80bf7b7e94d30339ce0d729160f90b92f7388b224c76ddaddbca16b29",
			"license": "MIT",
			"urls": [
				"bzz-raw://7353729caf6e83360220d29a321dace5f3bb5684293eae04fe1a8a526b1f3db8",
				"dweb:/ipfs/QmfL7nLPVJmiDgFtYSZoM2VWcKDqCHqaUZj2V9ZZX8qzCm"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/Context.sol": {
			"keccak256": "0x00f8a1bd52713525eb90f70b64f028de5c075fb6298cc9de2e8f0c022e1595ff",
			"license": "MIT",
			"urls": [
				"bzz-raw://4b5121409ef8f276add2cb646a4614809fb824012addf8f584d0bb2e0bb7ba53",
				"dweb:/ipfs/QmdN1Yk9Xmskgk2Y6DWNX7EmXU5EtKroCGHiQrHpXSWRZp"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/ERC165.sol": {
			"keccak256": "0x3703c49b4d0dead0f1b8a394bad526caf50fa9c4fb84ba525442a5d4e9cb7a18",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a81adcd36f30eedcd0c2b7597e96861eb4a0a2bfb4a377d244ed868cb1c66d6",
				"dweb:/ipfs/QmYgtmD9tzdRG5HYw9WfwnZ5DuLTu7jUWPV5LUWznaCa8B"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/ERC20.sol": {
			"keccak256": "0xe292401be2e019549ed0e39a463bc78ee14836cfb6a1ee6f5fc1e07d631b3247",
			"license": "MIT",
			"urls": [
				"bzz-raw://86f8e667c97d7766df861154ef1a75f6595faf2de1ceca6646cab82da53a2ac7",
				"dweb:/ipfs/QmRcazQa8H4i36vF87cRUrjaMFkXQnyMYavBk3hcB7TDJr"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/EnumerableSet.sol": {
			"keccak256": "0x460e5294c67dcceb3bdc3d7c683bbd8676a992e5520f281db01bcc44f6dde3ef",
			"license": "MIT",
			"urls": [
				"bzz-raw://4761bf01aa703591988fbde65c3fcda52172af311070f098119e8303f14c033e",
				"dweb:/ipfs/QmYfBrjUU1kDhVQhWkdXE1ZCoey11FXwCyQp6gd9pGPSh7"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/IAccessControl.sol": {
			"keccak256": "0x60692c586a204a446a7964b810f0ccd8ab9d19184c8e5399550ac24a0fc01365",
			"license": "MIT",
			"urls": [
				"bzz-raw://fcf1e7948df30ea7ed3c629a6158d0101f62eb150608722d2c42ffc6b8a50039",
				"dweb:/ipfs/QmVRZ7RH1wXB9XkSGK7Zmte6skMG4xaBLDTK7AXDTQnpM5"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/IAccessControlEnumerable.sol": {
			"keccak256": "0x6793f27da3bd6c6f02a113c2a9991fdb594b3f1ce74371c91033837266086344",
			"license": "MIT",
			"urls": [
				"bzz-raw://f66f04e9490e5092c42b54399ebf6a24083209a3cd03ed6a8cabc0ee02beac21",
				"dweb:/ipfs/Qmaaq5GpQhab4wDJWiC7VmTxqWtbb7iC7xBgT6gY5TgMqA"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/IERC165.sol": {
			"keccak256": "0xca6e686d3f19501229131c306da8b32cd888cbd3de3ee29036fb984228fedd7b",
			"license": "MIT",
			"urls": [
				"bzz-raw://9f35d5d15a890b60f2be07aee3335868c45bc1355d03a53cb1796c4d374190ad",
				"dweb:/ipfs/QmUM4K1WUr6Ut2Vjox6NFxT6TMun523TVV4eLZsoAonBRq"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/IERC20.sol": {
			"keccak256": "0x56611e8ecb97ec1d51818c63ce411c4a91a57d4d4f36ea40f826ce21377df1e7",
			"license": "MIT",
			"urls": [
				"bzz-raw://c205a2e68df8a81c6d59ade64023a23afd9d0d706546c3f667d5cbd58f253a8e",
				"dweb:/ipfs/QmeXCALDCf3YNE6FjNjerStTfs8DV3d62H9w3VjfQvdu37"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/IERC20Metadata.sol": {
			"keccak256": "0x45e754c52f433cc200b66eec6a639393b7ef4919cda51a3f46bea73a85f6d733",
			"license": "MIT",
			"urls": [
				"bzz-raw://53fd3b1e65946658ea2b6acffbeff0cef883c61fa5f23c9350a6c8a1677a4f0b",
				"dweb:/ipfs/QmU1tcNqkTAzxyszZ3LPyM2AxM4kVt2kJu94BQ4XDL6WLS"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/Pausable.sol": {
			"keccak256": "0xb079028e187234b11d4f8c6d66dfe18776d76d80ac5213813323b400d6b78b15",
			"license": "MIT",
			"urls": [
				"bzz-raw://80b40409ac6925814a3cc7437a9ef59332b64984c1d420475e6da30ac3125bf7",
				"dweb:/ipfs/QmfZ7rRL2gNL7wUak5Ln963oxiiTr46pKYjka3ynL2MF8s"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/RoxPresale.sol": {
			"keccak256": "0xe4b311147bbc42efa7fd0b25911cb87503337882fde0c6678f23d76bd1c29097",
			"license": "MIT",
			"urls": [
				"bzz-raw://f3eeb8d5eebb0606cbc008f1642b57c708bd50af24a953029b0a0cbf0a40918a",
				"dweb:/ipfs/QmNwQrwCFKbdbXfcQREqChEVLB25NZe9VosZy4X6C8sgga"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/SafeERC20.sol": {
			"keccak256": "0x4550bb1028664b78879e06de6ec5872702817ca3e35d55d1f1ccc48ce4699557",
			"license": "MIT",
			"urls": [
				"bzz-raw://f30115587131ca0493277ea74fe59dac31c9c3e99eb7ee6d03fc8ddfabe494f7",
				"dweb:/ipfs/Qmca4oc8eGJavWTdfjDJWB4A6FYzprzrGHjRCucADFWnik"
			]
		},
		"Users/kuchtak/work/virtuals/proxy/contract/contracts/RoxPresale/Strings.sol": {
			"keccak256": "0x1ca01170c4e9306009d086c132f39f1d8b23707fd3c706393105e715d9dcb24b",
			"license": "MIT",
			"urls": [
				"bzz-raw://176d1be20be0bfc798afbd4c41deed1e4a93f0bca07446d8585a5886da63e240",
				"dweb:/ipfs/QmVKjuixYBtJ42jxYQFgqukYfwFgPY5WHeA4E5fMFWAsY9"
			]
		}
	},
	"version": 1
}